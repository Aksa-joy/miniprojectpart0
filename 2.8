import { useState } from 'react';

const App = () => {
  const [persons, setPersons] = useState([
    { name: 'Arto Hellas' }
  ]);
  
  const [newName, setNewName] = useState('');
  const [newNumber, setNewNumber] = useState('');
  const [displayMessage, setDisplayMessage] = useState(null);

  const handleInputChangeName = (event) => {
    setNewName(event.target.value);
  };

  const handleInputChangeNumber = (event) => {
    setNewNumber(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault(); // Prevent the default form submission behavior

    if (persons.some(person => person.name === newName)) {
      // Check if the person already exists in the phonebook
      alert(`${newName} is already added to phonebook`);
      setDisplayMessage(`${newName} is already in the phonebook`);
      return; // Exit the function early if the name exists
    }

    // Add the new name to the persons state
    const personObject = { name: newName, number: newNumber };
    setPersons(persons.concat(personObject));
    setDisplayMessage(`Added ${newName}`);

    // Clear the input fields after submission
    setNewName('');
    setNewNumber('');
  };

  return (
    <div>
      <h2>Phonebook</h2>
      <form onSubmit={handleSubmit}>
        <div>
          name: <input value={newName} onChange={handleInputChangeName} />
        </div>
        <div>
          number: <input value={newNumber} onChange={handleInputChangeNumber} />
        </div>
        <div>
          <button type="submit">add</button>
        </div>
        <div>
          {displayMessage ? <p style={{ color: 'green' }}>{displayMessage}</p> : null}
        </div>
      </form>
      <h2>Numbers</h2>
      <div>
        {persons.map((person, index) => (
          <div key={index}>
            {person.name} {person.number}
          </div>
        ))}
      </div>
      <div>debug: {newName}</div> {/* Debug display of newName */}
    </div>
  );
}

export default App;
