import { useState } from 'react';

const App = () => {
  const [persons, setPersons] = useState([
    { name: 'Arto Hellas', number: '040-123456', id: 1 },
    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },
    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },
    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }
  ]);

  const [newName, setNewName] = useState('');
  const [newNumber, setNewNumber] = useState('');
  const [searchTerm, setSearchTerm] = useState('');
  const [displayMessage, setDisplayMessage] = useState(null);

  const handleInputChangeName = (event) => {
    setNewName(event.target.value);
  };

  const handleInputChangeNumber = (event) => {
    setNewNumber(event.target.value);
  };

  const handleInputChangeSearch = (event) => {
    setSearchTerm(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {
      alert(`${newName} is already added to phonebook`);
      setDisplayMessage(`${newName} is already in the phonebook`);
      return;
    }

    const personObject = { name: newName, number: newNumber, id: persons.length + 1 };
    setPersons(persons.concat(personObject));
    setDisplayMessage(`Added ${newName}`);

    setNewName('');
    setNewNumber('');
  };

  // Filtered persons based on the search term
  const filteredPersons = persons.filter(person => 
    person.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div>
      <h2>Phonebook</h2>
      
      {/* Search Input */}
      <div>
        <input 
          type="text" 
          placeholder="Search..." 
          value={searchTerm} 
          onChange={handleInputChangeSearch} 
        />
      </div>

      {/* Form for adding new person */}
      <form onSubmit={handleSubmit}>
        <div>
          name: <input value={newName} onChange={handleInputChangeName} />
        </div>
        <div>
          number: <input value={newNumber} onChange={handleInputChangeNumber} />
        </div>
        <div>
          <button type="submit">add</button>
        </div>
        <div>
          {displayMessage ? <p style={{ color: 'green' }}>{displayMessage}</p> : null}
        </div>
      </form>

      <h2>Numbers</h2>
      <div>
        {filteredPersons.map((person) => (
          <div key={person.id}>
            {person.name} {person.number}
          </div>
        ))}
      </div>
      <div>debug: {newName}</div> {/* Debug display of newName */}
    </div>
  );
}

export default App;
